this file tests 2-matrix_divided module
=======================================

tests exactly matrix_divided function
+++++++++++++++++++++++++++++++++++++++

first import the module

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

checking for module documentation
	>>> l = __import__("2-matrix_divided").__doc__
	>>> len(l) > 1
	True

checking for function documentation
	>>> l = __import__("2-matrix_divided").matrix_divided.__doc__
	>>> len(l) > 1
	True

now we check the functionality of the module
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

lets devide by 0
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

adding non numeric values
    >>> matrix = [["c", 2, 3],[4, "d", 6]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

rows with various lengths
    >>> matrix = [[1, 2, 3],[4, 5, 6, 5]]
    >>> matrix_divided(matrix, 4)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

checking with float values
    >>> matrix = [[1.5, 2.0, 3],[4, 5.4, 6]]
    >>> matrix_divided(matrix, 0.7)
    [[2.14, 2.86, 4.29], [5.71, 7.71, 8.57]]


if the matrix isnt list of lists
    >>> matrix = [(5, 4, 3), (5, 4, 3)]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
